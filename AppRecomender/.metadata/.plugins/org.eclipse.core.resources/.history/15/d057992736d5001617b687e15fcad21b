(import appRecomendations.model.*)
(deftemplate User       	(declare (from-class User)))
(deftemplate App			(declare (from-class App)))
(deftemplate Like 			(slot nick) (slot app)(slot fav))
(deftemplate Launch			(declare (from-class Launch)))
;;(deftemplate Profiles   (declare (from-class Profiles)))
;;(deftemplate Profile 	(slot nick) (slot profileName))
;;(defquery likes
;;    (declare (variables ?nick))
;;    (Like (nick ?nick) (app ?app))
;;    )
;;(defquery users "Encuentra usuarios con un perfil"
;;    (declare (variables ?profileName))
;;    (Profile (nick ?nick) (profileName ?profileName))
;;    )

;;(defrule usuario1 "Creacion usuario tipo 1"
;;    ?o <- (User {name  == "Pedro"})
;;    =>
;;    (assert (Profile (nick ?o.name) (profileName Otaku)))
;;    )
;;(defrule usuario2 "Creacion usuario tipo 2"
;;    ?o <- (User {name  == "Javi"})
;;    =>
;;    (assert (Profile (nick ?o.name) (profileName RatKid)))
;;    )

;; ------------------------------------------------------------
;;-----------------REGLAS PERFILES USUARIO---------------------
;;-------------------------------------------------------------

			;; ------------------------------------------------------------
			;;-----------------REGLAS LENGUAJE USUARIO---------------------
			;;-------------------------------------------------------------


			(defrule languageSpain
			    ?u <- (User {country == "Spain"})
			    =>
			    (modify ?u (language spanish))
			    )
			
			(defrule languageFrace
			    ?u <- (User {country == "Frace"})
			    =>
			    (modify ?u (language fraçais))
			    )
			
			(defrule languageItaly
			    ?u <- (User {country == "Italy"})
			    =>
			    (modify ?u (language italian))
			    )
			
			(defrule languageGermany
			    ?u <- (User {country == "Germany"})
			    =>
			    (modify ?u (language german))
			    )
			
			(defrule languageJapan
			    ?u <- (User {country == "Japan"})
			    =>
			    (modify ?u (language japanese))
			    )

			(defrule languageChina
			    ?u <- (User {country == "China"})
			    =>
			    (modify ?u (language chinese))
			    )

			(defrule languageRussia
			    ?u <- (User {country == "Russia"})
			    =>
			    (modify ?u (language russian))
			    )

			;; ------------------------------------------------------------
			;;-------------------REGLAS EDAD USUARIO-----------------------
			;;-------------------------------------------------------------

			(deffunction getAge (?date)
				return (- 2016 ?date)
			)

			(defrule age
			    ?u <- (User )
			    =>
				(modify ?u (age (getAge ?u.birthYear)))
		    )


			;; ------------------------------------------------------------
			;;-------------------REGLAS ECLVL USUARIO----------------------
			;;-------------------------------------------------------------
			
				;; ------------------------------------------------------------
				;;----------------ESPAÑA FRANCIA ITALIA------------------------
				;;-------------------------------------------------------------
				

			(defrule ecLvlSFILow
	        	?u <- (User {country == "Spain" && country == "Italy" && country == "France"}
        		{age < 12})
    			=>
	        	(modify ?u (ecLvl low))
        	)
			
			(defrule ecLvlSFIMedium
	        	?u <- (User {country == "Spain" && country == "Italy" && country == "France"}
        		{age > 12 && age < 25})
    			=>
	        	(modify ?u (ecLvl medium))
        	)

			(defrule ecLvlSFIHigh
	        	?u <- (User {country == "Spain" && country == "Italy" && country == "France"}
        		{age > 25})
    			=>
	        	(modify ?u (ecLvl high))
        	)

			(defrule ecLvlJapanChinaLow
    			?u <- (User {country == "China" && country == "Japan"}
        		{age < 12})
    			=>
	        	(modify ?u (ecLvl low))
        	)
			
			(defrule ecLvlJapanChinaMedium
    			?u <- (User {country == "China" && country == "Japan"}
        		{age > 12 && age < 25})
    			=>
	        	(modify ?u (ecLvl medium))
        	)
			
			(defrule ecLvlJapanChinaRussiaHigh
    			?u <- (User {country == "China" && country == "Japan" && country == "Russia"}
        		{age > 25})
    			=>
	        	(modify ?u (ecLvl medium))
        	)
			
			(defrule ecLvlRussiaLow
    			?u <- (User {country == "Russia"}
        		{age < 25})
    			=>
	        	(modify ?u (ecLvl low))
        	)

			(defrule ecLvlGermanyMedium
    			?u <- (User {country == "Germany"}
        		{age < 25})
    			=>
	        	(modify ?u (ecLvl medium))
        	)
			
			(defrule ecLvlGermanyHigh
    			?u <- (User {country == "Germany"}
        		{age > 25})
    			=>
	        	(modify ?u (ecLvl high))
        	)
			
			;; ------------------------------------------------------------
			;;----------------REGLAS GUSTOS USUARIO PERFIL-----------------
			;;-------------------------------------------------------------

			(defrule otaku
    			(User {age > 15 && age < 26} {country == "Spain"} (name ?nick))
    			=>
    			(assert (Like (nick ?nick) (app "Vocaloid") (fav 1)))
    			(assert (Like (nick ?nick) (app "Manga") (fav 1)))
    			(assert (Like (nick ?nick) (app "Animacion") (fav 1)))
    		)
			
			(defrule ratKid
    			(User {age < 14} 
        		{country == "Spain" && country == "France"}
        		(name ?nick))
    			=>
    			(assert (Like (nick ?nick) (app "Aventura") (fav 1)))
    			(assert (Like (nick ?nick) (app "Deporte") (fav 1)))
    			(assert (Like (nick ?nick) (app "Comedia") (fav 1)))
    			(assert (Like (nick ?nick) (app "Rap") (fav 1)))
    		)


(defquery favoritos "encuentra los favoritos de un usuario"
    (declare (variables ?nick))
    (Like (nick ?nick) (app ?app))
    (App (categoryList ?app) (name ?name))
 )

(deffunction calcNewFav (?fav)
				return ?fav + 1
)

(defrule increasefav
    ?l <- (Launch (nick ?nick) (appName ?appName))
    (App (name ?appName) (categoryList ?app))
    ?o <- (Like (nick ?nick) (app ?app) (fav ?fav))
		=>
    (modify ?o (fav (calcNewFav ?fav)))
    (remove ?l)
  )